events {
     worker_connections 1024; 
    }
http {
    include       mime.types;
    default_type  application/octet-stream;
    ##
    # ONE https entry‑point for everything
    ##
    server {
        listen 8080 ssl;                 # or 443 in production
        server_name localhost;
        ssl_certificate     /etc/nginx/ssl/certs/nginx-selfsigned.crt;
        ssl_certificate_key /etc/nginx/ssl/private/nginx-selfsigned.key;

        # ---- 2) API ---------------------------------------------------------
        location /api/ {                 # path‑based routing
            proxy_pass         http://api-gateway:3000/;   # keep trailing /
            proxy_http_version 1.1;
            proxy_set_header   Host              $host;
            proxy_set_header   X-Real-IP         $remote_addr;
            proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
        }

        location /ws/ {                 # path‑based routing
            proxy_pass         http://api-gateway:3000/;   # keep trailing /
            proxy_http_version 1.1;
            proxy_set_header   Upgrade           $http_upgrade;
            proxy_set_header   Connection        "upgrade";
            proxy_set_header   Host              $host;
            proxy_set_header   X-Real-IP         $remote_addr;
            proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
        }

        location / {
            proxy_pass         http://front:8000/;   # keep trailing /
            proxy_http_version 1.1;
            proxy_set_header   Host              $host;
            proxy_set_header   X-Real-IP         $remote_addr;
            proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
        }
        # # (optional) websockets
        # location /socket.io/ {
        #     proxy_pass http://api-gateway:4000;
        #     proxy_http_version 1.1;
        #     proxy_set_header Upgrade    $http_upgrade;
        #     proxy_set_header Connection "upgrade";
        # }
    }
    # HTTP ➜ HTTPS redirect
    server {
        listen 80;
        server_name localhost;
        return 301 https://$host$request_uri;
    }
}